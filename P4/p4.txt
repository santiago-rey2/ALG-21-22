*Practica 4 de Algoritmos* 

Daniela Cisneros: d.cisneross.
Alexander Hermida Pazos: alexander.hermida.
Santiago Rey Garcia: santiago.rey2.
 
La finalidad de esta practica consiste en obtener el arbol de recubrimiento mínimo en una cola, partiendo de grafos completos no dirigidos aleatorios, mediante el algoritmo de prim obteniendo la complejidad de este de manera empírica. 

El ordenador con el que hemos realizado las mediciones tiene las siguientes caracteristicas: 

-S.O: linuxMint Cinamon. 
-Version: Ubuntu 20.04.3 LTS.
-Equipo: Ryzen 3600X 6 cores 12 hilos.
-Memoria RAM: 32 GiB.

     n           t(n)      t(n)/n^1.9     t(n)/n^2     t(n)/n^2.1
*    25         2.100000    0.004636      0.003360      0.002435
*    50         8.600000    0.005087      0.003440      0.002326
*   100        34.370000    0.005447      0.003437      0.002169
*   200       153.870000    0.006534      0.003847      0.002265
    400       611.000000    0.006952      0.003819      0.002098
    800      2449.000000    0.007467      0.003827      0.001961
-> 1600     12403.000000    0.010132      0.004845      0.002317

 *: tiempo promedio de k=100 ejecuciones del algoritmo.
Cota subestimada = n^1.9
Cota ajustada = n^2 Constante: 0.0040 
Cota sobrestimada = n^2.1

Anomalia indicada con ->,hemos querido evitado la anomalia ejecutando varias veces el codigo en 
diferentes ordenadores y varias veces en cada uno obteniendo en todos el mismo resultado.

Conclusión:
En este experimento empírico hemos obtenido que la cota empírica para el algoritmo de prim coincide con su 
complejidad teorica n^2.
Para la obtención de unas cotas relativamente ajustadas hemos tenido que realizar multitud de ejecuciones
ya que se obtenían anomalías con frecuencia.
En el estudio no hemos podido realizar ejecuciones con matrices sumamente grandes ya que los elementos
de estas crecen de forma cuadrática provocando que con matrices de elementos que pueden parecer a simple
vista pequeños nos dan una cantidad masiva de elementos.





