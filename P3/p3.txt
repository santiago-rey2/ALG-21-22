*Practica 3 de Algoritmos* 

Daniela Cisneros: d.cisneross.
Alexander Hermida Pazos: alexander.hermida.
Santiago Rey Garcia: santiago.rey2.
 
La finalidad de esta practica consiste en ordenar de manera ascendente vectores de n numeros enteros con los algoritmos de ordenacion por inserción y ordenacion rápida obteniendo sus complejidades de manera empírica. 

El ordenador con el que hemos realizado las mediciones tiene las siguientes caracteristicas: 

-S.O: linuxMint Cinamon. 
-Version: Ubuntu 20.04.3 LTS.
-Equipo: Ryzen 3600X 6 cores 12 hilos.
-Memoria RAM: 32 GiB.

La unidad de tiempo que estamos utilizando son microsegundos; los vectores siguen una progresion geometrica de razon dos.

Tiempos Insercion

Inicializacion Descendente
    n           t(n)        t(n)/sub    t(n)/est      t(n)/sobre

   1000      875.000000     0.001746     0.000875     0.000439
   2000     3462.000000     0.001851     0.000865     0.000405
   4000    14281.000000     0.002046     0.000893     0.000389
   8000    56919.000000     0.002185     0.000889     0.000362
  16000   229607.000000     0.002361     0.000897     0.000341
  32000   917503.000000     0.002528     0.000896     0.000318
  64000  3665604.000000     0.002706     0.000895     0.000296

*: tiempo promedio de k=1000 ejecuciones del algoritmo.
Cota subestimada = n^1.9
Cota ajustada = n^2. Constante: 0.00088  
Cota sobrestimada = n^2.1 

Inicializacion Aleatorio
    n           t(n)        t(n)/sub    t(n)/est      t(n)/sobre

*  1000      439.077000     0.000876     0.000439     0.000220
   2000     1730.000000     0.000925     0.000432     0.000202
   4000     6819.000000     0.000977     0.000426     0.000186
   8000    27972.000000     0.001074     0.000437     0.000178
  16000   111528.000000     0.001147     0.000436     0.000165
  32000   444083.000000     0.001224     0.000434     0.000154
  64000  1765933.000000     0.001304     0.000431     0.000143

*: tiempo promedio de k=1000 ejecuciones del algoritmo.
Cota subestimada = n^1.9
Cota ajustada = n^2. Constante: 0.00043  
Cota sobrestimada = n^2.1

Inicializacion Ascendente
    n            t(n)        t(n)/sub     t(n)/est     t(n)/sobre

*  16000       51.586000     0.008488     0.003224     0.001225
*  32000      108.265000     0.009547     0.003383     0.001199
*  64000      219.585000     0.010376     0.003431     0.001135
* 128000      416.143000     0.010538     0.003251     0.001003
  256000      829.000000     0.011250     0.003238     0.000932
  512000     1722.000000     0.012522     0.003363     0.000903
 1024000     3462.000000     0.013491     0.003381     0.000847
 2048000     7056.000000     0.014735     0.003445     0.000806
 4096000    14287.000000     0.015989     0.003488     0.000761

*: tiempo promedio de k=1000 ejecuciones del algoritmo.
Cota subestimada = n^0.9
Cota ajustada = n^1. Constante: 0.0033 
Cota sobrestimada = n^1.1

(empezamos en 16000 elementos y acabamos en +4mill porque con menos elementos los timepos eran demasiado pequeños y nos encontramos demasiadas anomalias)

Tiempos QuickSort

UMBRAL = 100

Inicializacion Descendente
      n           t(n)        t(n)/sub     t(n)/est    t(n)/sobre

  *  2000       21.460000     0.010730     0.004310     0.002346
  *  4000       47.543000     0.011886     0.004393     0.002263
  *  8000      109.838000     0.013730     0.004670     0.002275
  * 16000      232.589000     0.014537     0.004550     0.002097
  * 32000      498.468000     0.015577     0.004486     0.001956
    64000     1020.000000     0.015938     0.004224     0.001743
   128000     2266.000000     0.017703     0.004317     0.001685
-> 256000     6076.000000     0.023734     0.005326     0.001967
   512000    10996.000000     0.021477     0.004435     0.001549

*: tiempo promedio de k=1000 ejecuciones del algoritmo.
Cota subestimada = n^1
Cota ajustada = n^1.12 Constante: 0.0044 
Cota sobrestimada = n^1.2
Medición anomala indicada con 256000 elementos

Inicializacion Aleatorio
    n           t(n)        t(n)/sub     t(n)/est    t(n)/sobre

*  2000      125.773000     0.062886     0.029185     0.020110
*  4000      271.885000     0.067971     0.029412     0.019589
   8000      594.000000     0.074250     0.029956     0.019286
  16000     1233.000000     0.077063     0.028989     0.018040
  32000     2681.000000     0.083781     0.029385     0.017676
  64000     5644.000000     0.088188     0.028839     0.016768
 128000    11956.000000     0.093406     0.028481     0.016006
 256000    25096.000000     0.098031     0.027870     0.015140
 512000    53934.000000     0.105340     0.027923     0.014662

*: tiempo promedio de k=1000 ejecuciones del algoritmo.
Cota subestimada = n^1
Cota ajustada = n^1.101 Constante: 0.028 
Cota sobrestimada = n^1.15

Inicializacion Ascendente
       n           t(n)        t(n)/sub     t(n)/est    t(n)/sobre

-> *  2000       19.605000     0.009803     0.004028     0.002144
   *  4000       45.924000     0.011481     0.004350     0.002186
   *  8000       99.781000     0.012473     0.004358     0.002067
   * 16000      218.503000     0.013656     0.004400     0.001970
   * 32000      481.449000     0.015045     0.004470     0.001890
     64000      989.000000     0.015453     0.004233     0.001690
    128000     2134.000000     0.016672     0.004212     0.001587
    256000     4823.000000     0.018840     0.004388     0.001561
    512000    10222.000000     0.019965     0.004288     0.001440

UMBRAL = 10
    
Inicializacion Descendente
     n          t(n)        t(n)/sub     t(n)/est    t(n)/sobre
*   2000       34.137000     0.017069     0.006760     0.003732
*   4000       75.854000     0.018964     0.006902     0.003610
*   8000      155.336000     0.019417     0.006495     0.003218
*  16000      313.064000     0.019567     0.006014     0.002823
   32000      642.000000     0.020063     0.005667     0.002520
   64000     1394.000000     0.021781     0.005655     0.002381
->128000     2925.000000     0.022852     0.005452     0.002175
  256000     7297.000000     0.028504     0.006250     0.002362
  512000    15773.000000     0.030807     0.006207     0.002222

*: tiempo promedio de k=1000 ejecuciones del algoritmo.
Cota subestimada = n^1
Cota ajustada = n^1.12186 Constante: 0.0060 
Cota sobrestimada = n^1.2
Medición anomala indicada con 128000 elementos

Inicializacion Aleatorio
    n          t(n)        t(n)/sub     t(n)/est    t(n)/sobre
*  2000      120.941000     0.060471     0.028063     0.019337
*  4000      253.286000     0.063322     0.027400     0.018249
   8000      549.000000     0.068625     0.027687     0.017825
  16000     1173.000000     0.073313     0.027578     0.017162
  32000     2473.000000     0.077281     0.027105     0.016304
  64000     5453.000000     0.085203     0.027863     0.016201
 128000    11886.000000     0.092859     0.028314     0.015913
 256000    24862.000000     0.097117     0.027610     0.014999
 512000    53119.000000     0.103748     0.027501     0.014441

 *: tiempo promedio de k=1000 ejecuciones del algoritmo.
Cota subestimada = n^1
Cota ajustada = n^1.101 Constante: 0.027 
Cota sobrestimada = n^1.15

Inicializacion Ascendente
    n          t(n)        t(n)/sub     t(n)/est    t(n)/sobre
*  2000       30.098000     0.015049     0.006114     0.003291
*  4000       65.701000     0.016425     0.006147     0.003127
*  8000      138.974000     0.017372     0.005989     0.002879
* 16000      295.366000     0.018460     0.005862     0.002663
  32000      623.000000     0.019469     0.005695     0.002445
  64000     1324.000000     0.020688     0.005574     0.002262
 128000     2980.000000     0.023281     0.005778     0.002216
 256000     6593.000000     0.025754     0.005888     0.002134
 512000    13990.000000     0.027324     0.005754     0.001971

 *: tiempo promedio de k=1000 ejecuciones del algoritmo.
Cota subestimada = n^1
Cota ajustada = n^1.1185 Constante: 0.0058 
Cota sobrestimada = n^1.2

UMBRAL = 1

Inicializacion Descendente
    n          t(n)        t(n)/sub     t(n)/est    t(n)/sobre
*  2000       42.714000     0.021357     0.003032     0.004670
*  4000       90.445000     0.022611     0.002962     0.004304
*  8000      185.205000     0.023151     0.002818     0.003837
* 16000      388.301000     0.024269     0.002762     0.003501
  32000      806.000000     0.025188     0.002693     0.003163
  64000     1687.000000     0.026359     0.002661     0.002882
 128000     3538.000000     0.027641     0.002644     0.002631
 256000     7794.000000     0.030445     0.002769     0.002523
 512000    17376.000000     0.033938     0.002944     0.002448

 *: tiempo promedio de k=1000 ejecuciones del algoritmo.
Cota subestimada = n^1
Cota ajustada = n^0.99 * log(n) Constante: 0.0027 
Cota sobrestimada = n^1.2

Inicializacion Aleatorio
    n          t(n)        t(n)/sub     t(n)/est    t(n)/sobre
*  2000      131.556000     0.065778     0.030526     0.021034
*  4000      282.150000     0.070537     0.030522     0.020329
   8000      608.000000     0.076000     0.030662     0.019740
  16000     1304.000000     0.081500     0.030658     0.019078
  32000     2743.000000     0.085719     0.030065     0.018084
  64000     5796.000000     0.090563     0.029616     0.017220
 128000    12557.000000     0.098102     0.029912     0.016811
 256000    26322.000000     0.102820     0.029231     0.015880
 512000    54700.000000     0.106836     0.028319     0.014871

 *: tiempo promedio de k=1000 ejecuciones del algoritmo.
Cota subestimada = n^1
Cota ajustada = n^1.101 Constante: 0.0027 
Cota sobrestimada = n^1.15

Inicializacion Ascendente
    n          t(n)        t(n)/sub     t(n)/est    t(n)/sobre
*  2000       40.884000     0.020442     0.011129     0.004470
*  4000       85.145000     0.021286     0.010963     0.004052
*  8000      181.302000     0.022663     0.011042     0.003756
* 16000      380.804000     0.023800     0.010971     0.003434
  32000      790.000000     0.024688     0.010766     0.003101
  64000     1658.000000     0.025906     0.010688     0.002832
 128000     3485.000000     0.027227     0.010627     0.002591
 256000     7712.000000     0.030125     0.011124     0.002496
 512000    15775.000000     0.030811     0.010764     0.002223

 *: tiempo promedio de k=1000 ejecuciones del algoritmo.
Cota subestimada = n^1
Cota ajustada = n^1.08 Constante: 0.0027 
Cota sobrestimada = n^1.2

CONCLUSION:
En el algortimo de insercion, observamos que el mejor caso aparece en vectores con inicializacion ascendente, mostrando tiempos muy pequeños. Mientras que, el peor caso se 
corresponde con aquellos vectores que presentan una inicializacion descendente, pues llegan a duplicar incluso los valores obtenidos al ordenar vectores con inicializacion 
aleatoria.

Estudiando el algoritmo de quickSort en los diferentes umbrales hemos podido comprobar que los vectores con inicializacion descendente y ascendente son similares en cuanto a 
tiempos, siendo estos los mejores casos y la inicializacion aleatoria, el peor. Cabe destacar que ,con un umbral = 100, encontramos los mejores tiempos en inicializaciones
descendentes y ascendentes; mientras que, con un umbral = 10, encontramos los mejores tiempos en inicializacion aleatoria. Por tanto, llegamos a la conclusion de que el 
umbral que presenta mejores tiempos de quicksort, es el umbral = 100.
    
Finalmente, al comparar ambos algoritmos, apreciamos que el algoritmo de insercion presenta mejores tiempos en cuanto a vectores con inicializacion ascendente. Aun asi, 
el algoritmo de quicksort consigue escasos tiempos en la inicializacion descendente ( siendo estos tiempos muy similares a los de la inicializacion ascendente) y en la 
inicializacion aleatoria. Dichos resultados se reflejan en las cotas que obtuvimos en los mejores casos del quicksort y las cotas del algoritmo de insercion. 

Por tanto, el algoritmo de quicksort es más eficaz para la ordenacion de vectores de n numeros.

